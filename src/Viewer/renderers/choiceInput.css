@tailwind base;
@tailwind components;
@tailwind utilities;

/* CUSTOM STYLING FOR RADIO BUTTON */

/* Customize the label (the container) */
.radio-container {
  /* display: block;
  position: relative;
  padding-left: 24px;
  margin-bottom: 4px;
  cursor: pointer;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none; */
  @apply block
  relative
  pl-6
  mb-1
  cursor-pointer
  select-none;
}

.radio-container:disabled,
.radio-input:disabled {
  @apply cursor-not-allowed;
}

/* Hide the browser's default radio button */
input.radio-input {
  /* position: absolute;
  opacity: 0;
  cursor: pointer;
  height: 1;
  width: 1; */
  @apply w-3
  h-3
  text-blue-600 
  bg-gray-100 
  border-gray-300 
  focus:ring-blue-500 
  dark:focus:ring-blue-600 
  dark:ring-offset-gray-800 
  focus:ring-2 
  dark:bg-gray-700 
  dark:border-gray-600;
}

label.radio-label {
  @apply ms-2
  text-sm
  font-medium
  text-gray-900
  dark:text-gray-300;
}

/* Create a custom radio button */
.radio-checkmark {
  /* position: absolute;
  top: 0;
  left: 0;
  height: 18px;
  width: 18px;
  background-color: var(--mainGray);
  border-style: solid;
  border-color: var(--canvastext);
  border-radius: 50%; */
  @apply absolute
  top-0
  left-0
  h-4
  w-4
  bg-gray-300
  border-solid
  border-gray-300
  rounded-full;
}

.radio-checkmark:disabled {
  @apply cursor-not-allowed
  bg-gray-300;
}

/* On mouse-over, add a grey background color */
.radio-container:hover input ~ .radio-checkmark {
  /* background-color: var(--lightBlue); */
  @apply bg-blue-300;
}

/* On mouse-over of disabled, keep the grey background color */
.radio-container:hover input ~ .radio-checkmark-disabled {
  /* background-color: var(--mainGray); */
  @apply bg-gray-300;
}

/* When the radio button is checked, add a blue background */
.radio-container input:checked ~ .radio-checkmark {
  /* background-color: var(--mainBlue); */
  @apply bg-blue-500;
}

/* When a radio button has focus, add a dark blue outline */
.radio-container:focus-within input ~ .radio-checkmark {
  /* outline: 2px solid var(--mainBlue);
  outline-offset: 2px; */
  @apply outline-none
  ring;
}

/* Create the indicator (the dot/circle - hidden when not checked) */
.radio-checkmark:after {
  /* content: "";
  position: absolute;
  display: none; */
  @apply content-[""]
  absolute
  hidden;
}

/* Show the indicator (dot/circle) when checked */
.radio-container input:checked ~ .radio-checkmark:after {
  /* display: block; */
  @apply block;
}

/* Style the indicator (dot/circle) */
.radio-container .radio-checkmark:after {
  /* top: 6px;
  left: 6px;
  width: 6px;
  height: 6px;
  border-radius: 50%;
  background: var(--canvas); */
  @apply top-1.5
  left-1.5
  w-1.5
  h-1.5
  rounded-full
  bg-white;
}

/* CUSTOM STYLING FOR CHECKBOX */

/* Customize the label (the container) */
.checkbox-container {
  /* display: block;
  position: relative;
  padding-left: 24px;
  margin-bottom: 4px;
  cursor: pointer;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none; */
  @apply block
  relative
  pl-6
  mb-1
  cursor-pointer
  select-none;
}

.checkbox-container label {
  @apply cursor-pointer;
}

.checkbox-container-disabled {
  @apply cursor-not-allowed;
}

.checkbox-container-disabled label {
  @apply cursor-not-allowed;
}

/* Hide the browser's default checkbox */
.checkbox-container input {
  @apply absolute
  /* opacity: 0;
  cursor: pointer;
  height: 1;
  width: 1; */
  opacity-0
  cursor-pointer
  h-1
  w-1;
}

.checkbox-container-disabled input {
  @apply cursor-not-allowed;
}

/* Create a custom checkbox */
.checkbox-checkmark {
  /* position: absolute;
  top: 0;
  left: 0;
  height: 18px;
  width: 18px;
  background-color: var(--mainGray);
  border-style: solid;
  border-color: var(--canvastext);
  border-radius: var(--mainBorderRadius); */
  @apply absolute
  top-0
  left-0
  h-4
  w-4
  bg-white
  border-2
  border-solid 
  border-blue-100
  rounded-sm;
}

.checkbox-checkmark-disabled {
  /* background-color: var(--mainGray);
  border-color: var(--mainGray);
  cursor: not-allowed; */
  @apply bg-blue-600
  border
  border-blue-100;
}

/* On mouse-over, add a light blue background color */
.checkbox-container:hover input ~ .checkbox-checkmark {
  /* background-color: var(--lightBlue); */
  @apply bg-blue-100;
}

/* On mouse-over of disabled, keep the grey background color */
.checkbox-container:hover input ~ .checkbox-checkmark-disabled {
  /* background-color: var(--mainGray); */
  @apply bg-blue-100;
}

/* When the checkbox is checked, add a dark blue background */
.checkbox-container input:checked ~ .checkbox-checkmark {
  /* background-color: var(--mainBlue); */
  @apply bg-blue-500
  border-solid
  border-blue-500
  rounded-sm;
}

/* When a checkbox has focus, add a dark blue outline */
.checkbox-container:focus-within input ~ .checkbox-checkmark {
  /* outline: 2px solid var(--mainBlue);
  outline-offset: 2px; */
  @apply outline-2
  border-2
  border-blue-300
  rounded-sm
  outline-offset-8;
}

/* Create the checkmark/indicator (hidden when not checked) */
.checkbox-checkmark:after {
  content: "";
  position: absolute;
  display: none;
}

/* Show the checkmark when checked */
.checkbox-container input:checked ~ .checkbox-checkmark:after {
  display: block;
}

/* Style the checkmark/indicator */
.checkbox-container .checkbox-checkmark:after {
  left: 5px;
  top: 1px;
  width: 5px;
  height: 10px;
  border: solid var(--canvas);
  border-width: 0 3px 3px 0;
  -webkit-transform: rotate(45deg);
  -ms-transform: rotate(45deg);
  transform: rotate(45deg);
}

/* CUSTOM STYLING FOR SELECT */
label.select-label {
  @apply inline-flex
  max-w-full;
}
select.custom-select {
  /* border: var(--mainBorder);
  border-radius: var(--mainBorderRadius);
  height: 24px;
  margin: 0px 4px 4px 4px; */
  @apply rounded
  h-6
  mt-0
  mr-4
  mb-4
  ml-0;
}

.custom-select:focus-within {
  @apply outline-none
  ring;
}
